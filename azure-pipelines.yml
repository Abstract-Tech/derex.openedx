pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: Docker credentials

steps:
  - script: |
      docker login -u ${DOCKER_USERNAME} -p ${DOCKER_PASSWORD}
    displayName: 'Log into docker registry'
    env:
      DOCKER_USERNAME: $(DOCKER_USERNAME)
      DOCKER_PASSWORD: $(DOCKER_PASSWORD)

  - script: docker pull derex/buildah
    displayName: 'Pull Buildah image'

  - script: |  # For some reason the following does not work if put on this line
      docker run --rm -v ${PWD}/.cache/wheelhouse:/dest derex/wheelhouse sh -c "cp -v /wheelhouse/*.whl /dest/; chown $(id -u):$(id -g) /dest/ -R"
    displayName: 'Put wheels cache in place'

  - script: |
      set -x
      set -e
      docker run \
        --rm --privileged --security-opt="seccomp=unconfined" \
        --cap-add=ALL \
        -v /var/lib/containers/:/var/lib/containers/:rw,Z \
        -v /var/run/docker.sock:/var/run/docker.sock \
        -v ${PWD}:${PWD} \
        derex/buildah \
        bash -c "
          set -x
          set -e
          cd ${PWD}
          mkdir -p ${PWD}/.cache/pip
          python3 -m pip install --upgrade pip
          pip3 install -r requirements.txt
          pip3 install .
          export WHEELS_CACHE=${PWD}/.cache/wheels
          derex.builder resolve derex/openedx/ironwood"
    displayName: 'Install derex.builder and build images'

  - script: |
      set -x
      set -e
      docker run \
        --rm --privileged --security-opt="seccomp=unconfined" \
        --cap-add=ALL \
        -v /var/lib/containers/:/var/lib/containers/:rw,Z \
        -v /var/run/docker.sock:/var/run/docker.sock \
        -v ${PWD}:${PWD} \
        derex/buildah \
        bash -c "
          python3 -m pip install --upgrade pip
          pip3 install -r requirements.txt
          pip3 install .
          sudo buildah push $(derex.builder image derex/openedx/base)
          sudo buildah push $(derex.builder image derex/openedx/wheels)
          sudo buildah push $(derex.builder image derex/openedx/buildwheels)
          sudo buildah push $(derex.builder image derex/openedx/ironwood)"
    displayName: 'Push built docker images'

  - script: |
      BEFORE=$(docker run --rm derex/wheelhouse:latest du /wheelhouse -s|cut -f1)
      AFTER=$(du .cache/wheelhouse -s|cut -f1)
      echo Current wheel house image is ${BEFORE} bytes. Now we have ${AFTER} bytes in the wheel cache.
      # Only act if we have at least one more Mb worth of wheels
      if  [ "${AFTER}" -gt "$((${BEFORE}+1000))" ]; then
          echo "${AFTER} is greater than ${BEFORE} plus one thousand";
      fi;
      docker build .cache -t derex/wheelhouse:latest
      docker push derex/wheelhouse:latest
    displayName: 'Build and push wheels image if necessary'
